/*
 * This file is generated by jOOQ.
 */
package org.example.soa_lab3_LabService.service.lab.generated.jooq.public_.tables.records;


import org.example.soa_lab3_LabService.service.lab.generated.jooq.public_.tables.DisciplineLabs;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DisciplineLabsRecord extends TableRecordImpl<DisciplineLabsRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.discipline_labs.discipline_id</code>.
     */
    public void setDisciplineId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.discipline_labs.discipline_id</code>.
     */
    public Long getDisciplineId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.discipline_labs.lab_id</code>.
     */
    public void setLabId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.discipline_labs.lab_id</code>.
     */
    public Long getLabId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DisciplineLabs.DISCIPLINE_LABS.DISCIPLINE_ID;
    }

    @Override
    public Field<Long> field2() {
        return DisciplineLabs.DISCIPLINE_LABS.LAB_ID;
    }

    @Override
    public Long component1() {
        return getDisciplineId();
    }

    @Override
    public Long component2() {
        return getLabId();
    }

    @Override
    public Long value1() {
        return getDisciplineId();
    }

    @Override
    public Long value2() {
        return getLabId();
    }

    @Override
    public DisciplineLabsRecord value1(Long value) {
        setDisciplineId(value);
        return this;
    }

    @Override
    public DisciplineLabsRecord value2(Long value) {
        setLabId(value);
        return this;
    }

    @Override
    public DisciplineLabsRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DisciplineLabsRecord
     */
    public DisciplineLabsRecord() {
        super(DisciplineLabs.DISCIPLINE_LABS);
    }

    /**
     * Create a detached, initialised DisciplineLabsRecord
     */
    public DisciplineLabsRecord(Long disciplineId, Long labId) {
        super(DisciplineLabs.DISCIPLINE_LABS);

        setDisciplineId(disciplineId);
        setLabId(labId);
        resetChangedOnNotNull();
    }
}
